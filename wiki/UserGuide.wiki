=User Guide=

==Introduction==
*Casper* is a simple scriplet language written in java .Uses JSP like coding conversion.

==Script Tags==

_*Scriptlet*_ - *<%* _javascript code_ *%>* 
      All javascript action statement like for,if,while can be embedded using scriptlet tag.

_*Expression*_ - *<%=* _javascript code_ *%>*
      All template text to be printed can be embedded using expression tag.Eg. <%= variable %>

_*Expression Language or EL tag*_ - *${* _javascript code_ *}*
      All template text to be printed can be embedded using expression tag.Eg. ${ variable }


==Example 1 - Hello World Template==
  _Example to demonstrate how to use the tag and print 'Hello World'_
  # Create a file *'ex.casper'* and add the following code to the file
    {{{
       <%=  "Hello World using expression tag" %>
       ${  "Hello World using EL tag" }
       <% print("Hello World using scriptlet tag") %>
    }}}
  # Execute the program - _* java -jar casper.jar ex.casper*_
  # Output :
    {{{
        Hello World using expression tag
        Hello World using EL tag
        Hello World using scriptlet tag
     }}}

==Example 2 - Redirecting output to file==
  _Example to demonstrate how to write the result to output file_
  # Create a file *'ex.casper'* and add the following code to the file
    {{{
       <%=  "Hello World using expression tag" %>
       ${  "Hello World using EL tag" }
       <% print("Hello World using scriptlet tag") %>
    }}}
  # Execute the program - _* java -jar casper.jar ex.casper result.text*_
  # Open *'result.text'* file you can see the following output :
    {{{
        Hello World using expression tag
        Hello World using EL tag
        Hello World using scriptlet tag
     }}}

==Example 3 - Compile scriptlet to javascript==
  _Casper convert scriplet to an intermediate javascript code and execute it using the javascript engine.This example demonstrate how to get the intermediate javascript code_
  # Create a file *'ex.casper'* and add the following code to the file
    {{{
       <%=  "Hello World using expression tag" %>
       ${  "Hello World using EL tag" }
       <% print("Hello World using scriptlet tag") %>
    }}}
  # Execute the program - _* java -jar ex.jar -compile hello.casper result.text*_
  # Open *'result.text'* file you can see the following output :
    {{{
        function $out(input){
              if(input==undefined || input==null || input=="")
                return
              casper.print(input)
        }
        $out(" ");
        $out(eval("  \"Hello World using expression tag\" "));
        $out("\r\n       ");
        $out(eval("  \"Hello World using EL tag\" "));
        $out("\r\n       ");
        print("Hello World using scriptlet tag") 
     }}}
    _If you don't provide result.text in command output will printed in your console_

     _$out() is a casper defined function use to print output to the corresponding outputstream more.._

==Example 4 - Embedding in java==
  _Example to demonstrate how to embedded capser in your java code_
  # Create a file *'Main.java'* and add the following code to the file
    {{{
       import com.casper.Casper;
       import com.casper.CasperException;
       import java.io.ByteArrayInputStream;
       import java.io.IOException;
       import javax.script.ScriptException;

       public class Main {

          public static void main(String[] args) throws CasperException, IOException, ScriptException {
        
             String code ="<%= \"Hello World\" %>";
            //Dont forget to add casper.jar to your java class library
           Casper.eval(new ByteArrayInputStream(code.getBytes()),System.out);
          }

      }
  }}}
  # Compile your Main.java code and run 
  # Output 
    {{{
        Hello World
     }}}
   _Casper class(API class) provide static methods to eval and compile you code_
   # eval(InputStream in,OutputStream op) - takes scriplet code and write result in op
   # eval(InputStream in,OutputStream op,Properties var) - var property used to define java variable to your scriptlet
   # compile(InputStream in,OutputStream op) - takes scriplet code and write javascript code 